name: CI/CD

on:

  pull_request:
    branches:
    - master
    types:
    - opened
    - synchronize
    - reopened

  push:
    branches:
    - master
    - dev

  release:
    types:
    - published

  workflow_dispatch:

jobs:

  dotnet-build:
    if: github.event_name != 'release'
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: .NET restore
        run: dotnet restore

      - name: .NET build
        run: dotnet build --configuration Release --no-restore

      - name: .NET Test
        run: dotnet test --no-build --verbosity normal --collect "Code coverage"

  publish-internal:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

      - uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - uses: nelonoel/branch-name@v1.0.1

      - name: Setting VERSION and BRANCH env
        run: |
          echo "VERSION=$NBGV_NuGetPackageVersion" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/setup-dotnet@v1
        with:
          source-url: https://nuget.pkg.github.com/atc-net/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Install dependencies
        run: dotnet restore

      - name: Creating library package for pre-release
        run: |
          dotnet pack -c Release -o packages -p:RepositoryBranch=$BRANCH -p:ContinuousIntegrationBuild=true

      - name: Push packages to GitHub Package Registry
        shell: bash
        run: |
           for f in ${GITHUB_WORKSPACE}/packages/*.nupkg
           do
             curl -vX PUT -u "atc-net:${{ secrets.GITHUB_TOKEN }}" -F package=@$f https://nuget.pkg.github.com/atc-net/
           done
